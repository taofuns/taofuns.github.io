<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>taofuns</title><description>The time I wasted, and the funs I got</description><link>https://taofuns.github.io</link><language>en</language><lastBuildDate>Mon, 7 Apr 2025 23:28:38 +0800</lastBuildDate><pubDate>Mon, 7 Apr 2025 23:28:38 +0800</pubDate><ttl>250</ttl><atom:link href="https://taofuns.github.io/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://taofuns.github.io/posts/Blog%20workflow</guid><title>Blog workflow</title><description></description><link>https://taofuns.github.io/posts/Blog%20workflow</link><pubDate>Wed, 22 May 2024 02:12:19 +0800</pubDate><content:encoded><![CDATA[<p>#Dev/Swift/SPM #Fn/Post</p><h2>Overview</h2><ol><li>Bear to write</li><li>Translate to Chinese</li><li>Export as markdown</li><li>Convert markdown attachments by PicGo</li><li>English version<ol><li>Upload to GitHub page</li><li>Share to medium</li><li>Chinese Version</li><li>Convert markdown and Share to WeChat</li><li>Share to Zhihu</li><li>Share to SSP</li></ol></li></ol><h2>Github workflow</h2><p><a href="https://taofuns.github.io/">Welcome to Taofuns!</a> Three are two repos, <a href="https://github.com/taofuns/taofuns.github.io">one</a> is for GitHub page, and <a href="https://github.com/taofuns/taoPublish">the other</a> is source file.</p><ol><li>remove tags, and add yaml meta information to markdown <code></code>`yaml --- date: 2023-09-11 21:24 description: Tutorials by Apple tags: Swift, LearnCode --- <code></code>`</li><li>add file to <code>/Users/Leon/Documents/taoPublish/Content/posts</code></li><li>For GitHub page (must):<ol><li><code>publish run</code></li><li><code>publish deploy</code></li><li>For taoPublish (not necessary):</li><li><code>git add .</code></li><li><code>git commit -m "note"</code></li><li><code>git push</code></li></ol></li></ol><ul><li>[ ] use script to automate the workflow</li></ul><h2>Future</h2><ul><li>convert to Video?<ul><li>YouTube</li><li>Bilibili</li><li>TikTok</li><li>covert to Audio?</li><li>Podcast</li><li>Ximalaya</li></ul></li></ul>]]></content:encoded></item><item><guid isPermaLink="true">https://taofuns.github.io/posts/first-post</guid><title>Apple official tutorials</title><description>Tutorials by Apple</description><link>https://taofuns.github.io/posts/first-post</link><pubDate>Mon, 11 Sep 2023 21:24:00 +0800</pubDate><content:encoded><![CDATA[<h1>Apple official tutorials</h1><p>Apple has used <code>DocC</code> creating some great tutorials, list as below.</p><ul><li><a href="https://developer.apple.com/tutorials/swiftui">#1 Introducing SwiftUI (Xcode13)</a></li><li><a href="https://developer.apple.com/tutorials/swiftui-concepts">#2 Learning SwiftUI (Xcode14)</a></li><li><a href="https://developer.apple.com/tutorials/app-dev-training#drawing">#3 Build Scrum (Xcode14)</a></li><li><a href="https://developer.apple.com/tutorials/sample-apps">#4 Exploring SwiftUI Sample Apps</a></li></ul><p>Among them, <code>Exploring SwiftUI Sample Apps</code> can also be found in Swift Playgrounds app.</p><p>What's more, apple has published a series of books called <a href="https://books.apple.com/us/book-series/develop-in-swift/id1483863177">Developer in Swift</a> in Apple Books, however, it uses UIKit which is a bit old.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://taofuns.github.io/posts/%E4%BB%8E%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%88%B0Obsidian%EF%BC%9A%E6%9C%AC%E8%B4%A8%E3%80%81%E6%96%B9%E6%B3%95%E4%B8%8E%E5%B7%A5%E5%85%B7</guid><title>从卡片笔记到Obsidian：本质、方法与工具</title><description>Tutorials by Apple</description><link>https://taofuns.github.io/posts/%E4%BB%8E%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%88%B0Obsidian%EF%BC%9A%E6%9C%AC%E8%B4%A8%E3%80%81%E6%96%B9%E6%B3%95%E4%B8%8E%E5%B7%A5%E5%85%B7</link><pubDate>Mon, 11 Sep 2023 21:24:00 +0800</pubDate><content:encoded><![CDATA[<h1>从卡片笔记到Obsidian：本质、方法与工具</h1><img src="https://obsidian-1305666858.cos.ap-nanjing.myqcloud.com/202212160214122.png" alt="Frame 3"/><p>本来记笔记是一件简单的事，但最近看了一些文章并体验了一些新的笔记应用反而让我多了些困惑，后来我才明白，困惑的不是如何更好地记笔记，而是如何更好地思考，笔记只是思考的具体结果。</p><p>好的笔记不应该是有了特定的工具才能写出来，厉害的人往往拿着简单的纸笔也能高效思考，但从麦克卢汉媒介即讯息的角度来说，工具也在塑造我们思考的方式。</p><p>好的笔记方法也不应该只有特定的技巧才能达成，不同的人有不同的思考方式，采用不同的笔记方法也理所应当，但有效笔记方法的共性应该是大于差异性的。</p><p>从思考到笔记，冥冥之中应该有条互相关联的线，这是我想在这篇文章里探讨的。</p><h2>一、本质</h2><p>很多人提到了卢曼的卡片笔记法，刚开始接触的时候我被各种笔记术语以及复杂的编码系统整蒙圈了，但刨开特定的方法，卢曼卡片盒的本质就是将大问题拆成小问题，把知识管理流程中的收集、整理、连接、应用拆分成了有序的流程。</p><img src="https://obsidian-1305666858.cos.ap-nanjing.myqcloud.com/202212160128559.png" alt="Pasted image 20221216003932"/><h3>收集</h3><p>无论是灵感笔记还是文献笔记，本质上都是收集随时产生的想法。这些都是想到就写下来，因为有后续进一步的整理流程，所以写的时候不用有太大的压力，不用考虑想法是否成熟，不用在乎造词遣句，尽可能地降低记录的摩擦。</p><h3>整理</h3><p>并不是所有笔记都会被保留下来，收集来的笔记只有进一步的加工才会保存成永久笔记。很多人做笔记只有记，而没有整理，因为整理太难了，难在我们总想将笔记整理成文章，而写一篇文章哪是那么容易的事情，卢曼比较巧妙，把整理的产物定成了想法卡片这样的小目标，为卡片纸张大小的约束，让整理容易了很多，就像写一篇微博总比写一篇博客要简单。</p><h3>连接</h3><p>很多人记笔记就只是记下来了，然后再也就不用了，使得笔记成为记忆的坟场。为了让平时的积累能够被未来用的时候被看见，卢曼在纸笔时代通过复杂的编码体系将想法进行连接，以打破纸质卡片空间的距离。</p><h3>应用</h3><p>所谓成功无诀窍，工夫在平时，当卡片盒里某个内容相关的卡片到达一定数量，主题会自动涌现出来，写作的时候也就不是从一张白纸开始了，想象一下，你有一大堆纸质卡片，把他们摊在桌面上，然后不断组合连接，通过一定的逻辑就能组织成一篇文章，这便是自下而上的知识管理。</p><p><strong>卡片笔记法的本质是问题拆解，卢曼的拆解方法也确实巧妙。</strong></p><h2>二、方法</h2><h3>用卡片分类打造工作流</h3><p>卢曼卡片法中最重要的就是永久笔记，那是思想的源泉，但一下子就要写出有价值的想法是极具挑战性的，如果刚开始就以这个为目标，那么无疑会有着巨大的记录压力，甚至可能就不记了。</p><p>所以在笔记放入卡片盒之前，会有更轻量级的笔记卡片作为铺垫，无论是灵感笔记还是文献笔记，都只是转化为有价值的永久笔记前的过渡，每天我们都会有很多的想法，有的极具价值，有的经不起时间的考验，卡片盒便以仪式化地方式对这些想法进行了一层过滤。</p><p>相应的，写一篇文章也不是一件容易得事情，而卡片盒中的永久卡片也为后续的文章打下了提前量。</p><h3>卡片使得想法成为素材</h3><p>为了让记下来的想法能够在需要的时候被用起来，它应该能成为素材的一部分。素材有点像是软件工程里的 API，可以像组件一样放到不同的上下文中，实现想法的快速复用。</p><p>Andy 也在 Evergreen Note 中提到好的笔记应该是原子化的，应该只阐述某一特定主题，但对于这个粒度的把握简直就像一门艺术，而卡片因为纸张空间的限制，反而让对粒度的定义变得简单。</p><p>因为纸张不大，只能记这么多，所以写起来没那么复杂，又因为空间不足，你要表达清楚一定的主题，卡片的内容就需要经过大脑深度加工方才写下来。</p><p>卢曼卡片还要求一定要用自己的话来写永久笔记，因为只有自己写下来的东西才能完整明白自己在说什么，虽然增加了存写难度，但是未来提取会更容易，也为笔记的连接建立了前提。</p><h3>想法连接带来外脑思考</h3><p>人们往往都说功夫在平时，但是很少有人具体告诉你应该如何转化这些积累，卡片笔记链接解决了这些问题。</p><p>我们大脑的工作记忆是有限的，就像电脑的内存一样，同一时间只能想到那么多的东西，如果你尝试过头脑风暴，就会发现风暴了一段时间就很累也想不到更多东西，而记下来的笔记链接相当于用外部存储扩容内存，让人发现被忽略的东西，并且那些被链接的卡片本身就是平时积累下来的有价值的思考。</p><p>我们的大脑也有着证实偏好，更喜欢关注那些能证实我们观点的东西，而记下来的卡片有助于与自己的想法对话，相当于把这个想法从脑子中剥离出来，可以从他者的视角来重新审视。</p><p><strong>卢曼的方法虽巧妙，但也不要刻板地遵循其中具体的技术，他的方法建立在特定的时代背景下，卢曼复杂的编码系统、密密麻麻的索引表、甚至是永久笔记称之为“永久”都是以纸笔作为媒介前提的，而生活在数字时代下的我们有更多新的工具可以使用。</strong></p><h2>三、工具</h2><p>近几年很多人都在谈论双链笔记，也开始尝试使用双链笔记作为传统笔记应用的替代，不过工具只是工具，它替代不了你思考，即使没有双链笔记，只要你日常能够认真记录，及时整理，勤于输出也可以达到很好的思考效果。</p><p>但好的工具也确实能给我们带来不少方便，因为最近在使用 Obsidian，就结合上述的本质与方法简单聊聊我对它使用方式的理解。</p><h3>日记</h3><p>每天我们都有很多的想法，如果犹豫是否要记下来的时候，那么就应该把它记下来。</p><p>日记（DailyNotes）是一个很巧妙的设计，每天生成新的一页，每天也仅有一页。我认为它并不是我们传统理解的回顾一天的日记，而是随时记录下来某一刻的想法，这些想法是否成熟并不重要，它就是一种轻量的灵感笔记。</p><p>对于日记来说，最重要的两点就是快速记录与及时回顾。我自己是使用快捷指令搭配快捷键 (分享在文末)，随时有想法不用打开 Obsidian 也能记录，记录完会自动按时间线罗列在每日日记中，等到第二天早上打开昨天的日记，花一点时间从中捞取有价值的想法整理加工成一个想法素材，卢曼把这个叫永久笔记，但我更喜欢 Andy 的命名：常青笔记（EvergreenNote），在数字时代这意味着这个笔记的内容并不是永恒不变的，随着时间的推移，我可以不断完善这个想法，或者按照原子化的思路重新拆分成不同的想法。</p><h3>双向链接</h3><p>双向链接不是一个新鲜的概念，在学术文献查询时一直都有引证和被引的概念，但过往的笔记应用大多数都是单向链接，双链打开了笔记新的可能性，也让如同卢曼那样复杂的手动链接方式变得简单。</p><p>链接是 Obsidian 的一等公民，是最最重要的功能，因为有双链，当我研究某个主题的时候就可以很快地将笔记库中的相关笔记提取出来，为我所用。相较于卢曼时代完全依靠手工的笔记连接，在计算机的加持下连接变得简单且更加强大。</p><img src="https://obsidian-1305666858.cos.ap-nanjing.myqcloud.com/202212160128316.png" alt="Pasted image 20221216004530"/><p>Obsidian 的连接有四种，不仅包括笔记中的链接和反向链接，还可以自动根据笔记标题检索出当前笔记中潜在的链接和提到当前笔记标题但是没有建立链接的笔记，这两种潜在链接的提示降低了人脑主动检索既有笔记进行连接的压力，当然为了实现这点，起好笔记标题在 Obsidian 非常重要。</p><p>好的笔记应该可以惊喜到你，而丰富的链接正是为了帮你找到你曾经知道但现在没想到的想法，连接过去与现在，也是因为丰富的链接，当下记录的想法不会白费，会在未来的某刻再次看见。所谓的惊喜，其实都是时间的馈赠。</p><h3>个性化</h3><p>我比较喜欢 Obsidian 的一点是其提供了丰富的配置以及足够多的插件，笔记本质上是思维的体现，每个人的思维方法是不一样的，使用工具的方式也不尽相同，即使可能有一些思维方法高明一些，但是如果与自己既有思维方式差距太大，那么再高明的思维方法也没办法落地，工具不应要求人去适应它，而应该服务于人。</p><h2>后记</h2><p>这篇分享是我这些天尝试使用卡片笔记法在 Obsidian 上完成的，主要是结合双链笔记的实践，在阅读《卡片笔记写作法》这本书、在浏览 <a href="https://zettelkasten.de/posts/overview/#principles">zettelkasten网站的指南</a> 以及 <a href="https://notes.andymatuschak.org/About_these_notes">Andy关于常青笔记的博文</a> 的过程中写下来的思考笔记的汇总，确实能体验到自下而上的知识管理带来的新力量，在经历笔记方式改变时也有很多困惑和不适应，但通过观察他人的笔记方法可以帮助理解他人的思维过程，用以反思自己思维的局限性，这可能是学习笔记方法与技术的意义所在。</p><h3>福利</h3><p>通过苹果的快捷指令可以在无需打开 Obsidian 的情况下实现灵感笔记快速记录，快捷指令还可以通过 Mac 上的全局快捷键或是 iPhone 上敲击两下手机背面快速打开。</p><p>为了捕捉记录的上下文，下面的速记指令可以自动记录选中的文字或者 Safari 正在访问的链接，还可以通过截屏速记截取屏幕图片并写上批注，记录完自动插入到日记下方。</p><p>macOS 和 iOS 略有不同，插入日记后实现效果如下图，使用的时候需要根据你自身的情况调整下快捷指令中日记文件夹的位置。</p><p><a href="https://www.icloud.com/shortcuts/aaeceb3794d541ccbbd114617bef5ba6">macOS打字速记</a> | <a href="https://www.icloud.com/shortcuts/b8dddc2f03e44b658da1e40768d56329">macOS截屏速记</a> | <a href="https://www.icloud.com/shortcuts/6db03607defc43c7b0bde18e108eb128">iOS打字速记</a>| <a href="https://www.icloud.com/shortcuts/203af4a72212443283beee3697ecb43e">iOS截屏速记</a></p><img src="https://obsidian-1305666858.cos.ap-nanjing.myqcloud.com/202212160128774.png" alt="Group 1"/>]]></content:encoded></item></channel></rss>